{"version":3,"sources":["components/Header.js","components/Search.js","components/ToDoLine.js","components/ToDoContainer.js","components/InputBlock.js","components/StatusFilters.js","App.js","index.js"],"names":["Header","user","messages","className","length","filter","elem","like","Search","searchResult","searchValue","placeholder","type","value","onChange","e","target","data-testid","ToDoLines","message","clickNotes","clickDelete","text","star","id","classNames","onClick","ToDoContainer","map","ToDoLine","InputBlock","clickNew","useState","inputText","setInputText","onSubmit","preventDefault","name","StatusFilters","clickAll","clickLiked","App","messagesInit","JSON","parse","localStorage","getItem","setMessages","searchMessages","setSearchMessages","likedMessages","setLikedMessages","all","setAll","setSearchValue","isLiked","setLiked","useEffect","newArr","item","setItem","stringify","search","includes","console","log","badge","arr","forEach","ReactDOM","render","document","getElementById"],"mappings":"sOA6BeA,EA1BA,SAAC,GAAsB,IAArBC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,SAKnB,OACI,sBAAKC,UAAU,oBAAf,UACI,6BAAKF,IACL,+BACI,iCACKC,EAASE,OADd,aAGC,IACD,+CAXDF,EAASG,QAAO,SAACC,GAAD,OAAUA,EAAKC,QAAMH,OAWpC,mBCSDI,EAtBA,SAAC,GAAiC,IAAhCC,EAA+B,EAA/BA,aAAcC,EAAiB,EAAjBA,YAE3B,OACI,uBACIC,YAAY,kBACZR,UAAU,4BACVS,KAAK,OACLC,MAAOH,EACPI,SAAU,SAACC,GACPN,EAAaM,EAAEC,OAAOH,QAE1BI,cAAY,YC4CTC,EAvDG,SAAC,GAAwC,IAAvCC,EAAsC,EAAtCA,QAASC,EAA6B,EAA7BA,WAAYC,EAAiB,EAAjBA,YAC9BC,EAAwBH,EAAxBG,KAAMC,EAAkBJ,EAAlBI,KAAMhB,EAAYY,EAAZZ,KAAMiB,EAAML,EAANK,GAErBC,EAAa,+CAIjB,OAHGF,IAAME,GAAc,cACpBlB,IAAMkB,GAAc,SAGnB,sBAAKtB,UAAWsB,EAAhB,UACI,sBACItB,UAAU,sBACVuB,QAAS,WAAON,EAAWI,EAAI,SAC/BP,cAAY,WAHhB,SAKKK,IAEL,sBAAKnB,UAAU,mDAAf,UACI,wBACIS,KAAK,SACLT,UAAU,kBACVc,cAAY,WACZS,QAAS,WAAON,EAAWI,EAAI,SAJnC,SAKI,mBACIrB,UAAU,iBAIlB,wBACIS,KAAK,SACLT,UAAU,mBACVc,cAAY,aACZS,QAAS,WAAOL,EAAYG,IAJhC,SAKI,mBACIrB,UAAU,oBAKlB,mBAAGA,UAAU,cAAcc,cAAY,oBCdxCU,EAvBO,SAAC,GAAyC,IAAxCzB,EAAuC,EAAvCA,SAAUkB,EAA6B,EAA7BA,WAAYC,EAAiB,EAAjBA,YAC1C,OACI,oBAAIlB,UAAU,sBAAd,SACKD,GAAYA,EAAS0B,KAAI,SAACT,GAAD,OACtB,oBAAqBhB,UAAU,kBAA/B,SACI,cAAC0B,EAAD,CACIV,QAASA,EACTC,WAAYA,EACZC,YAAaA,KAJZF,EAAQK,UC8BlBM,EAnCI,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SAAc,EACGC,mBAAS,IADZ,mBACxBC,EADwB,KACbC,EADa,KAE/B,OACI,uBACI/B,UAAU,sBACVgC,SAAU,SAACpB,GACPA,EAAEqB,iBACFL,EAASE,GACTC,EAAa,KAEjBjB,cAAY,OAPhB,UASI,uBACId,UAAU,8BACVQ,YAAY,mCACZG,SAAU,SAACC,GAAD,OAAOmB,EAAanB,EAAEC,OAAOH,QACvCA,MAAOoB,EACPrB,KAAK,OACLyB,KAAMJ,EACNhB,cAAY,aAEhB,wBACIL,KAAK,SACLT,UAAU,4BACVc,cAAY,cAHhB,qBCQGqB,EA7BO,SAAC,GAA4B,IAA3BC,EAA0B,EAA1BA,SAAUC,EAAgB,EAAhBA,WAE9B,OACI,sBAAKrC,UAAU,YAAf,UACI,wBACIS,KAAK,SACLT,UAAU,eACVuB,QAASa,EACTtB,cAAY,YAJhB,iBAQA,wBACIL,KAAK,SACLT,UAAU,4BACVuB,QAASc,EACTvB,cAAY,cAJhB,uBCwIGwB,MApHf,WACI,IAAMC,EAAeC,KAAKC,MAAMC,aAAaC,QAAQ,aAD1C,EAEqBd,mBAASU,GAA8B,IAF5D,mBAEJxC,EAFI,KAEM6C,EAFN,OAGiCf,mBAAS9B,GAH1C,mBAGJ8C,EAHI,KAGYC,EAHZ,OAI+BjB,mBAASgB,GAJxC,mBAIJE,EAJI,KAIWC,EAJX,OAKWnB,oBAAS,GALpB,mBAKJoB,EALI,KAKCC,EALD,OAM2BrB,mBAAS,IANpC,mBAMJtB,EANI,KAMS4C,EANT,OAOiBtB,oBAAS,GAP1B,mBAOJuB,EAPI,KAOKC,EAPL,OAQIxB,mBAAS,QAAjB/B,EARI,oBAqFX,OAjBAwD,qBAAU,WACN,GAAGF,EAAS,CACR,IAGMG,EAFH,YAAOR,GAES7C,QAAO,SAACsD,GAAD,OAAUA,EAAKpD,QACzC4C,EAAiB,YAAIO,IACrBL,GAAO,MAEZ,CAACE,EAAS7C,IAEb+C,qBAAU,WACNR,EAAkB,YAAI/C,IACtBiD,EAAiB,YAAIjD,IACrB2C,aAAae,QAAQ,WAAYjB,KAAKkB,UAAU3D,MACjD,CAACA,IAGA,sBAAKC,UAAU,MAAf,UACI,cAAC,EAAD,CACIF,KAAMA,EACNC,SAAUA,IAEd,sBAAKC,UAAU,sBAAf,UACI,cAAC,EAAD,CACIM,aA5CW,SAACqD,GACxBT,GAAO,GACPC,EAAeQ,GACf,IACMJ,EADG,YAAOxD,GACGG,QAAO,SAACC,GAAD,OAAUA,EAAKgB,KAAKyC,SAASD,MACvDb,EAAkB,YAAIS,IACtBP,EAAiB,YAAIO,KAuCThD,YAAaA,IAEjB,cAAC,EAAD,CACI8B,WAAY,kBAAMgB,GAAUD,IAC5BhB,SAAU,WACNc,GAAO,GACPC,EAAe,IACfL,EAAkB,YAAI/C,IACtBiD,EAAiB,YAAIjD,UAIjC,cAAC,EAAD,CACImB,YA/Ec,SAACG,GACvB,IACMkC,EADG,YAAOxD,GACGG,QAAO,SAACC,GAAD,OAAUA,EAAKkB,KAAOA,KAChDwC,QAAQC,IAAIP,GACZX,EAAY,YAAIW,KA4ERxD,SAjDJkD,EACO,YAAIlD,GACJqD,EAGA,YAAIL,GAFJ,YAAIF,GA+CP5B,WAlGY,SAACI,EAAI0C,GACzB,IAAMC,EAAG,YAAOjE,GAChBiE,EAAIC,SAAQ,SAAC9D,GACT,GAAGA,EAAKkB,KAAOA,EACX,OAAQ0C,GACR,IAAK,OACD5D,EAAKiB,MAAQjB,EAAKiB,KAClB,MACJ,IAAK,OACDjB,EAAKC,MAAQD,EAAKC,SAK9BwC,EAAY,YAAIoB,OAsFZ,cAAC,EAAD,CAAYpC,SA5EK,SAACT,GACtB,IAAM6C,EAAG,YAAOjE,GAEVwD,EAAM,sBAAOS,GAAP,CAAY,CACpB3C,GAAI2C,EAAI/D,OACRkB,KAAMA,EACNC,MAAM,EACNhB,MAAM,KAEVwC,EAAY,YAAIW,WC1ExBW,IAASC,OACL,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.16b3efd1.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Header = ({user, messages}) => {\r\n    const handleMessagesLiked = () => {\r\n        return messages.filter((elem) => elem.like).length;\r\n    };\r\n    \r\n    return (\r\n        <div className='app-header d-flex'>\r\n            <h1>{user}</h1>\r\n            <h2>\r\n                <span>\r\n                    {messages.length} notes,\r\n                </span>\r\n                {' '}\r\n                <span>\r\n                    from which {handleMessagesLiked()} liked\r\n                </span>\r\n            </h2>\r\n        </div>\r\n    );\r\n};\r\n\r\nHeader.propTypes = {\r\n    user: PropTypes.string.isRequired,\r\n    messages: PropTypes.array,\r\n};\r\n\r\nexport default Header;\r\n\r\n\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Search = ({searchResult, searchValue}) => {\r\n\r\n    return (\r\n        <input \r\n            placeholder='Search in Notes' \r\n            className='form-control search-input'\r\n            type='text'\r\n            value={searchValue}\r\n            onChange={(e) => {\r\n                searchResult(e.target.value);\r\n            }}\r\n            data-testid='search'\r\n        />\r\n        \r\n    );\r\n};\r\n\r\nSearch.propTypes = {\r\n    searchResult: PropTypes.func,\r\n    searchValue: PropTypes.string,\r\n};\r\n\r\nexport default Search;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ToDoLines = ({message, clickNotes, clickDelete}) => {\r\n    const {text, star, like, id} = message;\r\n\r\n    let classNames = 'app-list-item d-flex justify-content-between';\r\n    if(star) classNames += ' important';\r\n    if(like) classNames += ' like';\r\n\r\n    return (\r\n        <div className={classNames}>\r\n            <span \r\n                className='app-list-item-label'\r\n                onClick={() => {clickNotes(id, 'like');}}\r\n                data-testid='postText'\r\n            >\r\n                {text}\r\n            </span>\r\n            <div className='d-flex justify-content-center align-items-center'>\r\n                <button \r\n                    type='button' \r\n                    className='btn-star btn-sm' \r\n                    data-testid='postStar' \r\n                    onClick={() => {clickNotes(id, 'star');}}>\r\n                    <i \r\n                        className='fa fa-star'\r\n                    >\r\n                    </i>\r\n                </button>\r\n                <button \r\n                    type='button' \r\n                    className='btn-trash btn-sm' \r\n                    data-testid='postDelete' \r\n                    onClick={() => {clickDelete(id);}}>\r\n                    <i \r\n                        className='fa fa-trash-o'\r\n                        \r\n                    >\r\n                    </i>\r\n                </button>\r\n                <i className='fa fa-heart' data-testid='postLike'></i>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nToDoLines.propTypes = {\r\n    message: PropTypes.shape({\r\n        id: PropTypes.number,\r\n        text: PropTypes.string,\r\n        star: PropTypes.bool,\r\n        like: PropTypes.bool,\r\n    }),\r\n    clickNotes: PropTypes.func,\r\n    clickDelete: PropTypes.func,\r\n};\r\n\r\nexport default ToDoLines;\r\n","import React from 'react';\r\nimport ToDoLines from './ToDoLine';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ToDoContainer = ({messages, clickNotes, clickDelete}) => {\r\n    return (\r\n        <ul className='app-list list-group'>\r\n            {messages && messages.map((message) => (\r\n                <li key={message.id} className='list-group-item'>\r\n                    <ToDoLines \r\n                        message={message} \r\n                        clickNotes={clickNotes}\r\n                        clickDelete={clickDelete}\r\n                    />\r\n                </li>\r\n                \r\n            ))}\r\n        </ul>\r\n    );\r\n};\r\n\r\nToDoContainer.propTypes = {\r\n    messages: PropTypes.array,\r\n    clickNotes: PropTypes.func,\r\n    clickDelete: PropTypes.func,\r\n};\r\n\r\nexport default ToDoContainer;\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst InputBlock = ({clickNew}) => {\r\n    const [inputText, setInputText] = useState('');\r\n    return (\r\n        <form \r\n            className='bottom-panel d-flex'\r\n            onSubmit={(e) => {\r\n                e.preventDefault();\r\n                clickNew(inputText);\r\n                setInputText('');\r\n            }}\r\n            data-testid='form'\r\n        >\r\n            <input \r\n                className='form-control new-post-label'\r\n                placeholder='What are you now thinking about?' \r\n                onChange={(e) => setInputText(e.target.value)}\r\n                value={inputText}\r\n                type='text'\r\n                name={inputText}\r\n                data-testid='newInput'\r\n            />\r\n            <button\r\n                type='submit'\r\n                className='btn btn-outline-secondary'\r\n                data-testid='form-button'\r\n            >\r\n                Add\r\n            </button>\r\n        </form>\r\n    );\r\n};\r\n\r\nInputBlock.propTypes = {\r\n    clickNew: PropTypes.func,\r\n};\r\nexport default InputBlock;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst StatusFilters = ({clickAll, clickLiked}) => {\r\n\r\n    return (\r\n        <div className='btn-group'>\r\n            <button \r\n                type='button' \r\n                className='btn btn-info' \r\n                onClick={clickAll}\r\n                data-testid='searchAll'\r\n            >\r\n                All\r\n            </button>\r\n            <button \r\n                type='button' \r\n                className='btn btn-outline-secondary' \r\n                onClick={clickLiked}\r\n                data-testid='searchLiked'\r\n            >\r\n                Liked\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n\r\nStatusFilters.propTypes = {\r\n    clickAll: PropTypes.func,\r\n    clickLiked: PropTypes.func,\r\n};\r\n\r\nexport default StatusFilters;","import React, {  useEffect, useState } from 'react';\r\nimport './App.css';\r\nimport Header from './components/Header';\r\nimport Search from './components/Search';\r\nimport ToDoContainer from './components/ToDoContainer';\r\nimport InputBlock from './components/InputBlock';\r\nimport StatusFilters from './components/StatusFilters';\r\n\r\n// const messagesInit = [\r\n//     {\r\n//         id: 0,\r\n//         text: 'first',\r\n//         star: false,\r\n//         like: false,\r\n//     },\r\n//     {\r\n//         id: 1,\r\n//         text: 'second',\r\n//         star: false,\r\n//         like: false,\r\n//     },\r\n//     {\r\n//         id: 2,\r\n//         text: 'third',\r\n//         star: false,\r\n//         like: false,\r\n//     },\r\n//     {\r\n//         id: 3,\r\n//         text: 'forth',\r\n//         star: false,\r\n//         like: false,\r\n//     },\r\n// ];\r\n\r\nfunction App() {\r\n    const messagesInit = JSON.parse(localStorage.getItem('messages'));\r\n    const [messages, setMessages] = useState(messagesInit ? messagesInit : []);\r\n    const [searchMessages, setSearchMessages] = useState(messages);\r\n    const [likedMessages, setLikedMessages] = useState(searchMessages);\r\n    const [all, setAll] = useState(true);\r\n    const [searchValue, setSearchValue] = useState('');\r\n    const [isLiked, setLiked] = useState(false);\r\n    const [user] = useState('Nata');\r\n\r\n\r\n    const handleStarClick = (id, badge) => {\r\n        const arr = [...messages];\r\n        arr.forEach((elem) => {\r\n            if(elem.id === id) {\r\n                switch (badge) {\r\n                case 'star':\r\n                    elem.star = !elem.star;\r\n                    break;\r\n                case 'like':\r\n                    elem.like = !elem.like;\r\n                    break;\r\n                }\r\n            }\r\n        });\r\n        setMessages([...arr]);\r\n    };\r\n\r\n    const handleDeleteClick = (id) => {\r\n        const arr = [...messages];\r\n        const newArr = arr.filter((elem) => elem.id !== id);\r\n        console.log(newArr);\r\n        setMessages([...newArr]);\r\n    };\r\n\r\n    const handleNewMessage = (text) => {\r\n        const arr = [...messages];\r\n\r\n        const newArr = [...arr, {\r\n            id: arr.length,\r\n            text: text,\r\n            star: false,\r\n            like: false,\r\n        }];\r\n        setMessages([...newArr]);\r\n        // setSearchMessages([...newArr]);\r\n        // setLikedMessages([...newArr]);\r\n    };\r\n\r\n    const handleSearchResult = (search) => {\r\n        setAll(false);\r\n        setSearchValue(search);\r\n        const arr = [...messages];\r\n        const newArr = arr.filter((elem) => elem.text.includes(search));\r\n        setSearchMessages([...newArr]);\r\n        setLikedMessages([...newArr]);\r\n    };\r\n\r\n    const handleCheckOutput = () => {\r\n        if (all) {\r\n            return [...messages];\r\n        } else if(!isLiked) {\r\n            return [...searchMessages];\r\n        }  else {\r\n            return [...likedMessages];\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        if(isLiked) {\r\n            let arr = [];\r\n            arr = [...likedMessages];\r\n\r\n            const newArr = arr.filter((item) => item.like);\r\n            setLikedMessages([...newArr]);\r\n            setAll(false);\r\n        }\r\n    }, [isLiked, searchValue]);\r\n\r\n    useEffect(() => {\r\n        setSearchMessages([...messages]);\r\n        setLikedMessages([...messages]);\r\n        localStorage.setItem('messages', JSON.stringify(messages));\r\n    }, [messages]);\r\n\r\n    return (\r\n        <div className=\"app\">\r\n            <Header \r\n                user={user}\r\n                messages={messages}\r\n            />\r\n            <div className='search-panel d-flex'>\r\n                <Search \r\n                    searchResult={handleSearchResult} \r\n                    searchValue={searchValue}\r\n                />\r\n                <StatusFilters \r\n                    clickLiked={() => setLiked(!isLiked)}\r\n                    clickAll={() => {\r\n                        setAll(true);\r\n                        setSearchValue('');\r\n                        setSearchMessages([...messages]);\r\n                        setLikedMessages([...messages]);\r\n                    }}/>\r\n            </div>\r\n            \r\n            <ToDoContainer \r\n                clickDelete={handleDeleteClick} \r\n                messages={handleCheckOutput()} \r\n                clickNotes={handleStarClick} \r\n            />\r\n            <InputBlock clickNew={handleNewMessage} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n    <App />,\r\n    document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}